// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stocks.Data.Contexts;

namespace Stocks.Data.Migrations
{
    [DbContext(typeof(StocksContext))]
    [Migration("20201129194247_AddedIncomeStatementTable")]
    partial class AddedIncomeStatementTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Stocks.Data.Entities.DCF.Historical_discounted_cash_flow_Entity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("DCF")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("StockPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("DCFs");
                });

            modelBuilder.Entity("Stocks.Data.Entities.Dividend.DividendCalendarEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AdjDividend")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeclarationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Dividend")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DividendCalendarEntities");
                });

            modelBuilder.Entity("Stocks.Data.Entities.FinancialStatements.IncomeStatementEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AcceptedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("AccountsPayables")
                        .HasColumnType("bigint");

                    b.Property<long>("AccountsReceivables")
                        .HasColumnType("bigint");

                    b.Property<long>("AcquisitionsNet")
                        .HasColumnType("bigint");

                    b.Property<long>("CapitalExpenditure")
                        .HasColumnType("bigint");

                    b.Property<long>("CashAtBeginningOfPeriod")
                        .HasColumnType("bigint");

                    b.Property<long>("CashAtEndOfPeriod")
                        .HasColumnType("bigint");

                    b.Property<long>("ChangeInWorkingCapital")
                        .HasColumnType("bigint");

                    b.Property<long>("CommonStockIssued")
                        .HasColumnType("bigint");

                    b.Property<long>("CommonStockRepurchased")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("DebtRepayment")
                        .HasColumnType("bigint");

                    b.Property<long>("DeferredIncomeTax")
                        .HasColumnType("bigint");

                    b.Property<long>("DepreciationAndAmortization")
                        .HasColumnType("bigint");

                    b.Property<long>("DividendsPaid")
                        .HasColumnType("bigint");

                    b.Property<long>("EffectOfForexChangesOnCash")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FillingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FinalLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FreeCashFlow")
                        .HasColumnType("bigint");

                    b.Property<long>("Inventory")
                        .HasColumnType("bigint");

                    b.Property<long>("InvestmentsInPropertyPlantAndEquipment")
                        .HasColumnType("bigint");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NetCashProvidedByOperatingActivities")
                        .HasColumnType("bigint");

                    b.Property<long>("NetCashUsedForInvestingActivites")
                        .HasColumnType("bigint");

                    b.Property<long>("NetCashUsedProvidedByFinancingActivities")
                        .HasColumnType("bigint");

                    b.Property<long>("NetChangeInCash")
                        .HasColumnType("bigint");

                    b.Property<long>("NetIncome")
                        .HasColumnType("bigint");

                    b.Property<long>("OperatingCashFlow")
                        .HasColumnType("bigint");

                    b.Property<long>("OtherFinancingActivites")
                        .HasColumnType("bigint");

                    b.Property<long>("OtherInvestingActivites")
                        .HasColumnType("bigint");

                    b.Property<long>("OtherNonCashItems")
                        .HasColumnType("bigint");

                    b.Property<long>("OtherWorkingCapital")
                        .HasColumnType("bigint");

                    b.Property<string>("Period")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PurchasesOfInvestments")
                        .HasColumnType("bigint");

                    b.Property<long>("SalesMaturitiesOfInvestments")
                        .HasColumnType("bigint");

                    b.Property<long>("StockBasedCompensation")
                        .HasColumnType("bigint");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncomeStatementEntities");
                });

            modelBuilder.Entity("Stocks.Data.Entities.Index.SPYconstituentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedSecurity")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateAdded")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("RemovedSecurity")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RemovedTicker")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("SPYconstituentEntities");
                });

            modelBuilder.Entity("Stocks.Data.Entities.StockPrice.StockPriceHistoricEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AdjClose")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Change")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ChangeOverTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ChangePercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<long>("UnadjustedVolume")
                        .HasColumnType("bigint");

                    b.Property<long>("Volume")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Vwap")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("StockPriceHistoricEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
